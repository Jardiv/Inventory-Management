---
import Layout from '../../layouts/Layout.astro';
import LowStockTable from '../../components/reports/lowstock.jsx';

// Get current page from URL parameters
const currentPage = parseInt(Astro.url.searchParams.get('page') || '1');

// Fetch pagination data from API
let paginationData = {
    currentPage: 1,
    totalPages: 1,
    totalItems: 0,
    hasNextPage: false,
    hasPrevPage: false
};

try {
    const response = await fetch(`${Astro.url.origin}/api/reports/lowstock?page=${currentPage}`);
    const result = await response.json();
    
    if (result.success && result.pagination) {
        paginationData = result.pagination;
    }
} catch (error) {
    console.error('Failed to fetch pagination data:', error);
}

// Generate pagination pages array
function generatePaginationPages(currentPage: number, totalPages: number): (number | string)[] {
    const pages = [];
    
    // Always show first page
    if (totalPages > 0) {
        pages.push(1);
    }
    
    // Add ellipsis if needed before current page range
    if (currentPage > 4) {
        pages.push('...');
    }
    
    // Add pages around current page
    const start = Math.max(2, currentPage - 1);
    const end = Math.min(totalPages - 1, currentPage + 1);
    
    for (let i = start; i <= end; i++) {
        if (!pages.includes(i)) {
            pages.push(i);
        }
    }
    
    // Add ellipsis if needed after current page range
    if (currentPage < totalPages - 3) {
        pages.push('...');
    }
    
    // Always show last page
    if (totalPages > 1 && !pages.includes(totalPages)) {
        pages.push(totalPages);
    }
    
    return pages;
}

const paginationPages = generatePaginationPages(paginationData.currentPage, paginationData.totalPages);
---

<Layout>
    <!-- Body -->
    <div class="flex-1 overflow-hidden bg-primary rounded-lg p-6 mb-6">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-textColor-primary text-xl font-semibold">Low Stock Items</h2>
            <a href="/reports/Dashboard" class="p-2 text-textColor-primary hover:bg-btn-hover hover:text-white rounded">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
                </svg>
            </a>
        </div>
        
        <div class=" h-full overflow-y-auto">
            <!-- Low Stock Table -->
            <LowStockTable client:load currentPage={currentPage} />
        </div>
        
        <div class="flex justify-between items-center pt-6 pb-6 border-t border-gray-700 flex-shrink-0">
            <button id="selectAllButton" class="bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded font-medium text-sm transition-colors flex items-center gap-2">
                <input type="checkbox" id="selectAllBottom" class="rounded bg-gray-700 border-gray-600 pointer-events-none">
                Select All
            </button>
            
            <!-- Pagination Controls -->
            {paginationData.totalPages > 1 && (
                <div class="flex items-center gap-1">
                    <!-- Previous Button -->
                    <a 
                        href={paginationData.hasPrevPage ? `/reports/LowStock?page=${paginationData.currentPage - 1}` : '#'}
                        class={`p-2 rounded-md transition-colors ${
                            paginationData.hasPrevPage 
                                ? 'text-textColor-primary hover:bg-gray-700' 
                                : 'text-gray-500 cursor-not-allowed'
                        }`}
                    >
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
                        </svg>
                    </a>

                    <!-- Page Numbers -->
                    {paginationPages.map(page => {
                        if (page === '...') {
                            return (
                                <span class="px-3 py-2 text-gray-500">...</span>
                            );
                        }
                        
                        const isActive = page === paginationData.currentPage;
                        return (
                            <a 
                                href={`/reports/LowStock?page=${page}`}
                                class={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                                    isActive 
                                        ? 'bg-btn-primary text-white hover:bg-btn-hover' 
                                        : 'text-textColor-primary hover:bg-gray-700'
                                }`}
                            >
                                {page}
                            </a>
                        );
                    })}

                    <!-- Next Button -->
                    <a 
                        href={paginationData.hasNextPage ? `/reports/LowStock?page=${paginationData.currentPage + 1}` : '#'}
                        class={`p-2 rounded-md transition-colors ${
                            paginationData.hasNextPage 
                                ? 'text-textColor-primary hover:bg-gray-700' 
                                : 'text-gray-500 cursor-not-allowed'
                        }`}
                    >
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                            <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
                        </svg>
                    </a>
                </div>
            )}
            
            <button id="generatePurchaseOrderBtn" class="bg-purple-600 hover:bg-purple-700 text-white px-6 py-2 rounded font-medium text-sm transition-colors">
                Generate Purchase Order
            </button>
        </div>
    </div>

    <!-- Purchase Order Detail Modal -->
    <div id="editModal" class="fixed inset-0 bg-black/60 items-center justify-center z-50 hidden">
        <div class="bg-primary rounded-lg p-6 w-[500px] relative">
            <div class="flex justify-between items-center">
                <h2 class="text-textColor-primary text-xl font-semibold">Purchase Order Detail</h2>
                <button id="closeModalBtn" class="p-2 text-textColor-primary hover:bg-btn-hover hover:text-white rounded">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            
            <p class="text-textColor-tertiary text-sm mb-6">Review and confirm reorder details for this item.</p>
            
            <div class="space-y-4">
                <div class="flex items-center gap-4">
                    <label class="text-textColor-primary font-medium w-36 text-right">Item Code:</label>
                    <input id="modalItemCode" type="text" class="flex-1 px-3 py-2 bg-background text-textColor-tertiary rounded border border-textColor-tertiary" disabled>
                </div>
                
                <div class="flex items-center gap-4">
                    <label class="text-textColor-primary font-medium w-36 text-right">Item Name:</label>
                    <input id="modalItemName" type="text" class="flex-1 px-3 py-2 bg-background text-textColor-tertiary rounded border border-textColor-tertiary" disabled>
                </div>
                
                <div class="flex items-center gap-4">
                    <label class="text-textColor-primary font-medium w-36 text-right">Supplier:</label>
                    <input type="text" value="ABC Suppliers Inc." class="flex-1 px-3 py-2 bg-background text-textColor-tertiary rounded border border-textColor-tertiary" disabled>
                </div>
                
                <div class="flex items-center gap-4">
                    <label class="text-textColor-primary font-medium w-36 text-right">Current Quantity:</label>
                    <input id="modalCurrentQty" type="text" class="flex-1 px-3 py-2 bg-background text-textColor-tertiary rounded border border-textColor-tertiary" disabled>
                </div>
                
                <div class="flex items-center gap-4">
                    <label class="text-textColor-primary font-medium w-36 text-right">Order Quantity:</label>
                    <input id="modalOrderQty" type="number" class="flex-1 px-3 py-2 bg-background text-textColor-primary rounded border border-textColor-tertiary focus:border-blue-500 focus:outline-none">
                </div>
            </div>
            
            <div class="flex gap-3 mt-6">
                <button id="cancelOrderBtn" class="flex-1 bg-background hover:bg-textColor-tertiary  text-textColor-primary px-4 py-2 rounded font-medium transition-colors">
                    Cancel
                </button>
                <button id="confirmOrderBtn" class="flex-1 bg-green-700 hover:bg-green-900 text-textColor-primary px-4 py-2 rounded font-medium transition-colors">
                    Confirm
                </button>
            </div>
        </div>
    </div>

    <!-- Purchase Order Success Modal -->
    <div id="successModal" class="fixed inset-0 bg-black/60 items-center justify-center z-50 hidden">
        <div class="bg-primary rounded-lg p-6 w-[400px] relative">
            <div class="flex justify-between items-center mb-4">
                <div></div>
                <button id="closeSuccessModalBtn" class="text-textColor-primary hover:text-textColor-tertiary">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            
            <div class="text-center">
                <!-- Green Checkmark Icon -->
                <div class="mx-auto mb-4 w-16 h-16 bg-green-600 rounded-full flex items-center justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-8 h-8 text-white">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" />
                    </svg>
                </div>
                
                <h2 class="text-textColor-primary text-xl font-semibold mb-2">Generated Purchase Order Successfully!</h2>
                <p class="text-textColor-tertiary text-sm mb-6">You can now view or export the purchase order</p>
            </div>
            
            <div class="flex gap-3">
                <button id="closeSuccessBtn" class="flex-1 bg-btn-primary hover:btn-primary-600 text-textColor-secondary px-4 py-2 rounded font-medium transition-colors border border-gray-600">
                    Close
                </button>
                <button id="viewTransactionBtn" class="flex-1 bg-btn-primary hover:btn-primary-600 text-textColor-secondary px-4 py-2 rounded font-medium transition-colors border border-gray-600">
                    View Transaction
                </button>
            </div>
        </div>
    </div>

    <script is:inline src="/scripts/reports/LowStock.js"></script>
</Layout>