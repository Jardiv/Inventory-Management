---
import Layout from '../../layouts/Layout.astro';
---

<!-- INVENTORY DASHBOARD -->
 
<Layout>
	
	 <div class="flex min-h-screen">
    <!-- Sidebar -->
    <aside class="w-64 bg-[#0d0d0d] flex flex-col justify-between border-r border-gray-800">
      <div>
        <div class="text-2xl font-bold px-6 py-4 border-b border-gray-700">IMS</div>
        <nav class="mt-6 space-y-1">
          <a href="#" class="flex items-center px-6 py-3 hover:bg-[#1a1a1a]">
            <span class="material-icons mr-3">home</span> Dashboard
          </a>
          <a href="#" class="flex items-center px-6 py-3 bg-[#9b2cfa] text-white">
            <span class="material-icons mr-3">inventory</span> Inventory
          </a>
          <a href="#" class="flex items-center px-6 py-3 hover:bg-[#1a1a1a]">
            <span class="material-icons mr-3">receipt_long</span> Stock Transaction
          </a>
          <a href="#" class="flex items-center px-6 py-3 hover:bg-[#1a1a1a]">
            <span class="material-icons mr-3">track_changes</span> Tracking
          </a>
          <a href="#" class="flex items-center px-6 py-3 hover:bg-[#1a1a1a]">
            <span class="material-icons mr-3">bar_chart</span> Reports
          </a>
        </nav>
      </div>
      <div class="px-6 py-4 border-t border-gray-700 text-sm text-gray-400">‚öôÔ∏è Settings</div>
    </aside>

    <!-- Main Content -->
    <main class="flex-1 p-6 bg-[#1a1a1a]">
      <!-- Header (Line ~32) -->
      <div class="flex justify-between items-center mb-6">
        <input id="globalSearch" oninput="filterTable()" type="text" placeholder="Search Product" class="px-4 py-2 w-1/3 rounded bg-[#2b2b2b] text-white focus:outline-none"/>
        <span class="text-white">üîî</span>
      </div>

      <!-- Overview Section (Line ~38) -->
      <section id="overviewSection">
        <!-- Filters (Line ~40) -->
        <div class="flex gap-4 mb-4">
          <input id="filterName" oninput="filterTable()" type="text" placeholder="Filter by name..." class="px-3 py-2 rounded bg-[#2b2b2b] text-white"/>
          <select id="filterCategory" onchange="filterTable()" class="bg-[#2b2b2b] text-white px-3 py-2 rounded">
            <option value="">All Categories</option>
            <option value="Grains">Grains</option>
            <option value="Condiments">Condiments</option>
            <option value="Carbs">Carbs</option>
          </select>
        </div>

        <!-- Product Table with 10 Entries (Line ~49) -->
        <div class="overflow-x-auto">
          <table class="table-auto w-full text-left">
            <thead>
              <tr class="bg-[#2b2b2b]">
                <th class="px-4 py-2">Product ID</th>
                <th class="px-4 py-2">Name</th>
                <th class="px-4 py-2">Category</th>
                <th class="px-4 py-2">Unit</th>
                <th class="px-4 py-2">Stock</th>
              </tr>
            </thead>
            <tbody id="productTable">
              <!-- Only 10 Rows -->
              <tr class="border-b border-gray-700"><td class="px-4 py-2">1001</td><td>Rice</td><td>Grains</td><td>10kg</td><td>100</td></tr>
              <tr class="border-b border-gray-700"><td class="px-4 py-2">1002</td><td>Soy Sauce</td><td>Condiments</td><td>Liter</td><td>40</td></tr>
              <tr class="border-b border-gray-700"><td class="px-4 py-2">1003</td><td>Vinegar</td><td>Condiments</td><td>Liter</td><td>55</td></tr>
              <tr class="border-b border-gray-700"><td class="px-4 py-2">1004</td><td>Sugar</td><td>Condiments</td><td>Grams</td><td>30</td></tr>
              <tr class="border-b border-gray-700"><td class="px-4 py-2">1005</td><td>Flour</td><td>Carbs</td><td>1kg</td><td>20</td></tr>
              <tr class="border-b border-gray-700"><td class="px-4 py-2">1006</td><td>Corn</td><td>Grains</td><td>1kg</td><td>15</td></tr>
              <tr class="border-b border-gray-700"><td class="px-4 py-2">1007</td><td>Salt</td><td>Condiments</td><td>500g</td><td>60</td></tr>
              <tr class="border-b border-gray-700"><td class="px-4 py-2">1008</td><td>Pepper</td><td>Condiments</td><td>100g</td><td>35</td></tr>
              <tr class="border-b border-gray-700"><td class="px-4 py-2">1009</td><td>Bread</td><td>Carbs</td><td>pcs</td><td>75</td></tr>
              <tr class="border-b border-gray-700"><td class="px-4 py-2">1010</td><td>Oats</td><td>Grains</td><td>500g</td><td>50</td></tr>
            </tbody>
          </table>
        </div>

        <!-- View All Button (Line ~70) -->
        <div class="mt-4 text-right">
          <button onclick="toggleSections()" class="bg-purple-600 px-4 py-2 rounded hover:bg-purple-700">View All</button>
        </div>
      </section>

      <!-- View All Section (Hidden Initially, Line ~75) -->
      <section id="viewAllSection" class="hidden">
        <button onclick="toggleSections()" class="mb-4 text-sm text-purple-400 hover:underline">‚Üê Go back</button>
        <div id="viewAllTable"></div>
        <div class="mt-4" id="paginationControls"></div>
      </section>
    </main>
  </div>

  <script>
    const fullData = [...document.querySelectorAll("#productTable tr")].map(tr => {
      const cells = tr.querySelectorAll("td");
      return {
        id: cells[0].innerText,
        name: cells[1].innerText,
        category: cells[2].innerText,
        unit: cells[3].innerText,
        stock: cells[4].innerText,
      };
    });

    let currentPage = 1;
    const rowsPerPage = 10;

    function toggleSections() {
      document.getElementById('overviewSection').classList.toggle('hidden');
      document.getElementById('viewAllSection').classList.toggle('hidden');
      renderTable();
    }

    function filterTable() {
      const nameVal = document.getElementById("filterName").value.toLowerCase();
      const catVal = document.getElementById("filterCategory").value.toLowerCase();
      const globalVal = document.getElementById("globalSearch").value.toLowerCase();

      const filtered = fullData.filter(p => {
        return (
          (!nameVal || p.name.toLowerCase().includes(nameVal)) &&
          (!catVal || p.category.toLowerCase() === catVal) &&
          (!globalVal || Object.values(p).some(val => val.toLowerCase().includes(globalVal)))
        );
      });

      renderTable(filtered);
    }

    function renderTable(data = fullData) {
      const table = document.getElementById("viewAllTable");
      const paginated = data.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage);

      let html = '<table class="table-auto w-full text-left"><thead><tr class="bg-[#2b2b2b]">';
      html += '<th class="px-4 py-2">Product ID</th><th class="px-4 py-2">Name</th><th class="px-4 py-2">Category</th><th class="px-4 py-2">Unit</th><th class="px-4 py-2">Stock</th></tr></thead><tbody>';
      paginated.forEach(p => {
        html += `<tr class="border-b border-gray-700"><td class="px-4 py-2">${p.id}</td><td>${p.name}</td><td>${p.category}</td><td>${p.unit}</td><td>${p.stock}</td></tr>`;
      });
      html += '</tbody></table>';
      table.innerHTML = html;

      renderPagination(data);
    }

    function renderPagination(data) {
      const totalPages = Math.ceil(data.length / rowsPerPage);
      const controls = document.getElementById("paginationControls");
      let html = "";
      for (let i = 1; i <= totalPages; i++) {
        html += `<button onclick="changePage(${i})" class="px-3 py-1 mx-1 rounded ${i === currentPage ? 'bg-purple-700' : 'bg-[#2b2b2b]'}">${i}</button>`;
      }
      controls.innerHTML = html;
    }

    function changePage(page) {
      currentPage = page;
      filterTable();
    }
  </script>


</Layout>