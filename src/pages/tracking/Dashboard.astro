---
import Layout from '../../layouts/Layout.astro';

// Quick Summary Data
const quickSummaryData = [
    { label: "Warehouses", value: "8", color: "text-blue" },
    { label: "Total Stocks", value: "11,000", color: "text-yellow" },
    { label: "Shipments Received", value: "8", color: "text-green" },
    { label: "Pending Shipments", value: "5", color: "text-red" }
];

// Icons for Quick Summary (defined in component, not in data)
const summaryIcons = ["üè≠", "üì¶", "üì•", "üîÑ"];
const baseURL = import.meta.env.SITE || 'http://localhost:4321'; // fallback to local dev
const response = await fetch(`${baseURL}/api/tracking/warehouse-storage?page=1&limit=5`);
const { data: warehouseItems = [] } = await response.json();
---

<!-- TRACKING DASHBOARD -->
<Layout>
  <!----Quick summary card---->
  <div class="w-full grid grid-cols-5 grid-rows-1 gap-4 mb-4">
      <!-- Quick Summary Section -->
      <div class="bg-primary col-span-5 row-span-1 p-6 rounded-lg">
          <div class="flex justify-between items-center mb-4">
              <h2 class="text-textColor-primary text-lg sm:text-xl lg:text-2xl font-semibold">Quick Summary</h2>
          </div>
          <div class="grid grid-cols-2 sm:grid-cols-4 gap-4">
              {quickSummaryData.map((item, index) => (
                  <div class="bg-background rounded-lg p-4 text-center">
                      <div class="text-2xl mb-2">{summaryIcons[index]}</div>
                      <div class={`text-xl font-bold ${item.color} mb-1`}>{item.value}</div>
                      <div class="text-textColor-primary text-sm">{item.label}</div>
                  </div>
              ))}
          </div>
      </div>
  </div>

  <!-- Warehouse Summary -->
  <div class="w-full bg-primary rounded-lg p-6 mb-4 text-textColor-primary font-[Poppins]">
    <!-- Header Row -->
    <div class="flex justify-between items-center mb-6">
      <!-- Left: Title + Dropdown -->
      <div class="flex items-center gap-4">
        <h2 class="text-2xl font-semibold">Warehouse Summary</h2>

          <!-- Dropdown -->
          <div class="relative">
            <div class="relative inline-block text-left">
              <button id="select-button"
                class="flex justify-between items-center bg-primary text-textColor-primary rounded px-4 py-2 text-sm w-auto min-w-[160px] whitespace-nowrap border border-transparent hover:border-btn-hover active:border-btn-hover">
                <span id="selected-text">Select Warehouse</span>
                <svg class="w-4 h-4 ml-2 text-textColor-primary" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 10.939l3.71-3.71a.75.75 0 111.06 1.06l-4.24 4.25a.75.75 0 01-1.06 0L5.21 8.27a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
                </svg>
              </button>

              <div id="dropdown" class="hidden absolute mt-2 bg-primary border border-border_color rounded shadow-md z-10 w-[160px]">
                <ul class="py-1 text-sm text-textColor-primary">
                  <li><a href="#" class="dropdown-item block px-4 py-2 hover:bg-btn-hover hover:text-textColor-secondary cursor-pointer">Warehouse 1</a></li>
                  <li><a href="#" class="dropdown-item block px-4 py-2 hover:bg-btn-hover hover:text-textColor-secondary cursor-pointer">Warehouse 2</a></li>
                  <li><a href="#" class="dropdown-item block px-4 py-2 hover:bg-btn-hover hover:text-textColor-secondary cursor-pointer">Warehouse 3</a></li>
                </ul>
              </div>
            </div>
          </div>
      </div>

      <!-- Right: See All -->
      <a href="/tracking/warehouse-storage" class="text-btn-primary text-sm hover:underline">See All</a>
    </div>

    <!-- Table Header -->
    <div class="grid grid-cols-4 text-lg font-semibold border-b border-border_color py-3">
      <div class="text-center w-full">Item ID</div>
      <div class="text-center w-full">Name</div>
      <div class="text-center w-full">Quantity</div>
      <div class="text-center w-full">Category</div>
    </div>

    <!-- Table Rows -->
    <div class="divide-y divide-border_color">
      {warehouseItems.map(item => (
        <div class="grid grid-cols-4 py-4 text-center text-lg">
          <div class="w-full min-w-0">{item.items?.sku}</div>
          <div class="w-full min-w-0">{item.items?.name}</div>
          <div class="w-full min-w-0">{item.quantity}</div>
          <div class="w-full min-w-0 font-semibold text-base">{item.items?.category?.name}</div>
        </div>
      ))}

      {/* Empty rows to make it always 5 */}
      {Array.from({ length: Math.max(0, 5 - warehouseItems.length) }).map(() => (
        <div class="grid grid-cols-4 py-4 text-center text-lg text-transparent">
          <div class="w-full min-w-0">-</div>
          <div class="w-full min-w-0">-</div>
          <div class="w-full min-w-0">-</div>
          <div class="w-full min-w-0">-</div>
        </div>
      ))}
    </div>
  </div>




  <div class="w-full flex gap-6">
    <!-- Recent Shipments Table -->
    <div class="w-1/2 bg-primary rounded-md p-6 text-textColor-primary font-poppins">
      <!-- Header Row -->
      <div class="flex justify-between items-center mb-6">
        <div class="flex items-center space-x-4">
          <h2 class="text-xl font-semibold">Recent Shipments</h2>
        </div>
        <a href="/tracking/shipment-history" class="text-btn-primary text-sm hover:underline">See All</a>
      </div>

      <!-- Table -->
      <div>
        <div class="grid grid-cols-4 text-sm font-semibold border-b border-border_color pb-2 mb-4 text-left">
          <span>Shipment ID</span>
          <span>Name</span>
          <span>Quantity</span>
          <span>Status</span>
        </div>
        <div class="space-y-2 text-sm">
          <div class="grid grid-cols-4 items-center border-b border-border_color py-2">
            <span>A2B1</span>
            <span>Sardines</span>
            <span>120</span>
            <span class="text-green-500 font-semibold">RECEIVED</span>
          </div>
          <div class="grid grid-cols-4 items-center border-b border-border_color py-2">
            <span>A2B1</span>
            <span>Sardines</span>
            <span>120</span>
            <span class="text-green-500 font-semibold">RECEIVED</span>
          </div>
          <div class="grid grid-cols-4 items-center border-b border-border_color py-2">
            <span>A2B1</span>
            <span>Sardines</span>
            <span>120</span>
            <span class="text-green-500 font-semibold">RECEIVED</span>
          </div>
          <div class="grid grid-cols-4 items-center py-2">
            <span>A2B1</span>
            <span>Sardines</span>
            <span>120</span>
            <span class="text-green-500 font-semibold">RECEIVED</span>
          </div>
          
          <!-- More rows... -->
        </div>
      </div>
    </div>

    <!-- Recent Transfers Table -->
    <div class="w-1/2 bg-primary rounded-md p-6 text-textColor-primary font-poppins">
      <!-- Header Row -->
      <div class="flex justify-between items-center mb-6">
        <div class="flex items-center space-x-4">
          <h2 class="text-xl font-semibold">Recent Transfers</h2>
        </div>
        <a href="/tracking/Transfer_product" class="text-btn-primary text-sm hover:underline">See All</a>
      </div>

      <!-- Table -->
      <div>
        <div class="grid grid-cols-5 text-sm font-semibold border-b border-border_color pb-2 mb-4 text-left">
          <span>Transfer ID</span>
          <span>Name</span>
          <span>Qty.</span>
          <span>From</span>
          <span>To</span>
        </div>
        <div class="space-y-2 text-sm">
          <div class="grid grid-cols-5 items-center border-b border-border_color py-2">
            <span>T1</span>
            <span>Soap</span>
            <span>120</span>
            <span>W1</span>
            <span>W2</span>
          </div>
          <div class="grid grid-cols-5 items-center border-b border-border_color py-2">
            <span>T1</span>
            <span>Soap</span>
            <span>120</span>
            <span>W1</span>
            <span>W2</span>
          </div>
          <div class="grid grid-cols-5 items-center border-b border-border_color py-2">
            <span>T1</span>
            <span>Soap</span>
            <span>120</span>
            <span>W1</span>
            <span>W2</span>
          </div>
          <div class="grid grid-cols-5 items-center  py-2">
            <span>T1</span>
            <span>Soap</span>
            <span>120</span>
            <span>W1</span>
            <span>W2</span>
          </div>
          <!-- More rows... -->
        </div>
      </div>
    </div>
  </div>
  <script>
    const dropdown = document.getElementById('dropdown');
    const selectButton = document.getElementById('select-button');
    const selectedText = document.getElementById('selected-text');
    const items = document.querySelectorAll('.dropdown-item');

    // Toggle dropdown
    selectButton.addEventListener('click', (e) => {
      e.stopPropagation(); // Prevent closing immediately
      dropdown.classList.toggle('hidden');
      selectButton.classList.toggle('border-btn-hover');
    });

    // Handle item selection
    items.forEach(item => {
      item.addEventListener('click', (e) => {
        e.preventDefault();
        const name = e.target.textContent;
        selectedText.textContent = name;

        dropdown.classList.add('hidden');
        selectButton.classList.add('border-btn-hover'); // Keep border active
      });
    });

    // Close dropdown if click outside
    document.addEventListener('click', (e) => {
      if (!dropdown.contains(e.target) && !selectButton.contains(e.target)) {
        dropdown.classList.add('hidden');
        selectButton.classList.remove('border-btn-hover');
      }
    });
  </script>

</Layout>


