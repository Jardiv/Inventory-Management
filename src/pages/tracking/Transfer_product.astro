---
import Layout from '../../layouts/Layout.astro';
---
<Layout>
  <div class="w-full max-w-[1560px] h-[500px] bg-primary rounded-md p-6 relative text-textColor-primary font-[Poppins]">
    <!-- Header -->
    <div class="text-[25px] font-semibold mb-6">Transfer List</div>

    <!-- Actions -->
    <div class="flex justify-between items-center mb-6">
      <div></div>
      <div class="flex items-center gap-4">
        <!-- Transfer Button -->
        <button id="open-transfer-modal" class="flex items-center gap-2 border border-border_color rounded-md px-4 py-2 hover:bg-btn-primary hover:text-textColor-secondary transition">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6 mr-2">
            <path fill-rule="evenodd" d="M15.97 2.47a.75.75 0 0 1 1.06 0l4.5 4.5a.75.75 0 0 1 0 1.06l-4.5 4.5a.75.75 0 1 1-1.06-1.06l3.22-3.22H7.5a.75.75 0 0 1 0-1.5h11.69l-3.22-3.22a.75.75 0 0 1 0-1.06Zm-7.94 9a.75.75 0 0 1 0 1.06l-3.22 3.22H16.5a.75.75 0 0 1 0 1.5H4.81l3.22 3.22a.75.75 0 1 1-1.06 1.06l-4.5-4.5a.75.75 0 0 1 0-1.06l4.5-4.5a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd" />
          </svg>
          <span class="text-lg">Transfer Items</span>
        </button>

        <!-- Icon Button -->
        <div class="w-[63px] h-[48px] border border-border_color rounded-md flex items-center justify-center hover:bg-btn-primary transition">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" class="w-6 h-6" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2a1 1 0 01-.293.707L15 13.414V20a1 1 0 01-1.447.894l-4-2A1 1 0 019 18v-4.586L3.293 6.707A1 1 0 013 6V4z" />
          </svg>
        </div>
      </div>
    </div>

    <!-- Table Headers -->
    <div class="grid grid-cols-6 text-center text-lg border-b border-border_color py-2 font-medium">
      <div>Transfer ID</div>
      <div>Item Name</div>
      <div>Transferred Qty.</div>
      <div>Date</div>
      <div>From</div>
      <div>To</div>
    </div>

    <!-- Table Rows -->
    <div class="divide-y divide-border_color">
      <div class="grid grid-cols-6 text-center text-lg py-4 font-normal">
        <div>T1</div>
        <div>Sardines</div>
        <div>100</div>
        <div>MM-DD-YYYY</div>
        <div>W1</div>
        <div>W2</div>
      </div>
    </div>

    <!-- Pagination (Sticky Footer-Like) -->
    <div class="absolute bottom-4 left-0 right-0 px-6">
      <div class="flex justify-between items-center">
        <button class="border border-border_color rounded-md px-6 py-2 text-lg hover:bg-btn-primary hover:text-textColor-secondary transition">
          Prev
        </button>
        <div class="text-base font-light">
          Page <span class="font-normal">0</span> of <span class="font-normal">0</span>
        </div>
        <button class="border border-border_color rounded-md px-6 py-2 text-lg hover:bg-btn-primary hover:text-textColor-secondary transition">
          Next
        </button>
      </div>
    </div>
  </div>

  <!-- ✅ Modal -->
<div id="transferModal" class="hidden fixed inset-0 bg-black/60 flex items-center justify-center z-50">
  <div class="w-[996px] max-w-[95%] bg-primary border border-border_color rounded-md shadow-lg text-textColor-primary font-[Poppins] relative overflow-auto max-h-[90vh]">

    <!-- Modal Header -->
    <div class="flex justify-between items-center p-6 border-b border-border_color">
      <h2 class="text-2xl font-semibold">Transfer Items</h2>
      <button id="close-transfer-modal" class="w-8 h-8 flex items-center justify-center hover:bg-border_color rounded-full cursor-pointer">
        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>

    <!-- Modal Body -->
    <div class="p-6 space-y-6">
      <!-- From/To Fields -->
      <div class="grid grid-cols-2 gap-6">
        <div>
          <label class="text-lg mb-2 block">From:</label>
          <div class="border border-border_color rounded-md px-4 py-4 text-center text-textColor-tertiary">Select Warehouse</div>
        </div>
        <div>
          <label class="text-lg mb-2 block">To:</label>
          <div class="border border-border_color rounded-md px-4 py-4 text-center text-textColor-tertiary">Select Warehouse</div>
        </div>
      </div>

      <!-- Add Items Button -->
      <div class="flex justify-end">
        <button id="open-add-items-modal" class="flex items-center gap-2 bg-green hover:bg-green/80 text-white px-4 py-2 rounded-md transition">
          <svg class="w-4 h-4" fill="white" viewBox="0 0 24 24"><path d="M12 5v14m7-7H5"/></svg>
          Add items to transfer
        </button>
      </div>

      <!-- Table Header -->
      <div class="grid grid-cols-5 text-textColor-primary text-lg font-medium border-b border-border_color pb-2">
        <div>Product ID</div>
        <div>Product</div>
        <div class="text-center">Available Qty</div>
        <div class="text-center">Selected Qty</div>
        <div class="text-center">Action</div>
      </div>

      <!-- Items List -->
      <div class="divide-y divide-border_color max-h-[300px] overflow-y-auto">
        <div class="grid grid-cols-5 py-3 items-center">
          <div>1741</div>
          <div>Product 1</div>
          <div class="text-center">0</div>
          <div class="text-center">0</div>
          <div class="text-center">
            <button class="text-red hover:text-red/80 transition">
              <svg class="w-5 h-5 mx-auto" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" clip-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm2.121-11.121a1 1 0 10-1.414-1.414L10 8.586 8.293 6.879a1 1 0 10-1.414 1.414L8.586 10l-1.707 1.707a1 1 0 101.414 1.414L10 11.414l1.707 1.707a1 1 0 001.414-1.414L11.414 10l1.707-1.707z"/>
              </svg>
            </button>
          </div>
        </div>
        <!-- Repeat rows as needed -->
      </div>
    </div>

    <!-- Modal Footer -->
    <div class="flex justify-end items-center gap-4 p-6 border-t border-border_color">
      <button class="bg-red hover:bg-red/80 text-white px-6 py-2 rounded-md transition">Clear All</button>
      <button class="bg-green hover:bg-green/80 text-white px-6 py-2 rounded-md transition">Initiate Transfer</button>
    </div>
  </div>
</div>
<!-- ✅ Second Modal: Add Items to Transfer -->
<div id="addItemsModal" class="hidden fixed inset-0 z-[60] flex items-center justify-center bg-black/60">
  <div class="w-[996px] max-w-[95%] bg-primary border border-border_color rounded-md p-6 text-textColor-primary font-[Poppins] shadow-xl space-y-6 overflow-y-auto max-h-[95vh] relative">

    <!-- Modal Header -->
    <div class="flex justify-between items-center">
      <h2 class="text-3xl font-medium">Warehouse 1</h2>
      <button id="close-add-items-modal" class="w-10 h-10 flex items-center justify-center rounded-full hover:bg-border_color/20 transition">
        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
        </svg>
      </button>
    </div>

    <!-- Table Header -->
    <div class="grid grid-cols-6 gap-2 font-semibold text-xl border-b border-border_color pb-2">
      <div></div>
      <div>Item ID</div>
      <div>Item</div>
      <div class="text-center">Available Qty</div>
      <div class="text-center">Selected Qty</div>
      <div></div>
    </div>

    <!-- Items -->
    <div class="space-y-4">
      <!-- Item Row -->
      <div class="grid grid-cols-6 gap-2 items-center">
        <div>
          <input type="checkbox" class="form-checkbox w-5 h-5 accent-white border border-white bg-primary rounded-md" />
        </div>
        <div class="text-lg">1761</div>
        <div class="text-lg">Product 1</div>
        <div class="text-center text-lg">100</div>
        <div>
          <div class="flex items-center justify-between border border-white rounded-md px-3 py-1 w-20 mx-auto">
            <span>0</span>
            <button>
              <svg class="w-4 h-4 text-white" viewBox="0 0 24 24" fill="currentColor">
                <path d="M7 14l5-5 5 5H7z" />
              </svg>
            </button>
          </div>
        </div>
        <div>
          <button>
            <svg class="w-5 h-5 mx-auto text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M10 18a8 8 0 100-16 8 8 0 000 16zm2.121-11.121a1 1 0 10-1.414-1.414L10 8.586 8.293 6.879a1 1 0 10-1.414 1.414L8.586 10l-1.707 1.707a1 1 0 101.414 1.414L10 11.414l1.707 1.707a1 1 0 001.414-1.414L11.414 10l1.707-1.707z"/>
            </svg>
          </button>
        </div>
      </div>
    </div>

    <!-- Footer Actions -->
    <div class="flex justify-between pt-4">
      <button class="bg-red hover:bg-red/80 text-white font-medium text-lg px-6 py-2 rounded-md">
        Clear All
      </button>
      <button class="bg-green hover:bg-green/80 text-white font-medium text-lg px-6 py-2 rounded-md">
        Add
      </button>
    </div>
  </div>
</div>

<!-- ✅ Modal Script -->
<script>
  const transferModal = document.getElementById('transferModal');
  const openTransferBtn = document.getElementById('open-transfer-modal');
  const closeTransferBtn = document.getElementById('close-transfer-modal');

  openTransferBtn.addEventListener('click', () => {
    transferModal.classList.remove('hidden');
  });

  closeTransferBtn.addEventListener('click', () => {
    transferModal.classList.add('hidden');
  });

  transferModal.addEventListener('click', (e) => {
    if (e.target === transferModal) {
      transferModal.classList.add('hidden');
    }
  });
  
  const addItemsModal = document.getElementById('addItemsModal');
  const openAddItemsBtn = document.getElementById('open-add-items-modal');
  const closeAddItemsBtn = document.getElementById('close-add-items-modal');

  openAddItemsBtn?.addEventListener('click', () => {
    addItemsModal.classList.remove('hidden');
  });

  closeAddItemsBtn?.addEventListener('click', () => {
    addItemsModal.classList.add('hidden');
  });

  addItemsModal?.addEventListener('click', (e) => {
    if (e.target === addItemsModal) {
      addItemsModal.classList.add('hidden');
    }
  });
</script>
</Layout>
